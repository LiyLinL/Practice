<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liy.generator.mapper.QuartzTaskInformationsMapper">
  <resultMap id="BaseResultMap" type="com.liy.generator.entity.QuartzTaskInformations">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="TASK_NO" jdbcType="NVARCHAR" property="taskNo" />
    <result column="TASK_NAME" jdbcType="NVARCHAR" property="taskName" />
    <result column="CLASS_NAME" jdbcType="NVARCHAR" property="className" />
    <result column="EXECUTE_PARAMETER" jdbcType="NVARCHAR" property="executeParameter" />
    <result column="SCHEDULER_RULE" jdbcType="NVARCHAR" property="schedulerRule" />
    <result column="FROZEN_STATUS" jdbcType="NVARCHAR" property="frozenStatus" />
    <result column="FROZEN_TIME" jdbcType="TIMESTAMP" property="frozenTime" />
    <result column="UNFROZEN_TIME" jdbcType="TIMESTAMP" property="unfrozenTime" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="LAST_MODIFY_TIME" jdbcType="TIMESTAMP" property="lastModifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, TASK_NO, TASK_NAME, CLASS_NAME, EXECUTE_PARAMETER, SCHEDULER_RULE, FROZEN_STATUS, 
    FROZEN_TIME, UNFROZEN_TIME, CREATE_TIME, LAST_MODIFY_TIME
  </sql>
  <select id="selectByExample" parameterType="com.liy.generator.entity.QuartzTaskInformationsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from QUARTZ_TASK_INFORMATIONS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from QUARTZ_TASK_INFORMATIONS
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from QUARTZ_TASK_INFORMATIONS
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.liy.generator.entity.QuartzTaskInformationsExample">
    delete from QUARTZ_TASK_INFORMATIONS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liy.generator.entity.QuartzTaskInformations">
    insert into QUARTZ_TASK_INFORMATIONS (ID, TASK_NO, TASK_NAME, 
      CLASS_NAME, EXECUTE_PARAMETER, SCHEDULER_RULE, 
      FROZEN_STATUS, FROZEN_TIME, UNFROZEN_TIME, 
      CREATE_TIME, LAST_MODIFY_TIME)
    values (#{id,jdbcType=BIGINT}, #{taskNo,jdbcType=NVARCHAR}, #{taskName,jdbcType=NVARCHAR}, 
      #{className,jdbcType=NVARCHAR}, #{executeParameter,jdbcType=NVARCHAR}, #{schedulerRule,jdbcType=NVARCHAR}, 
      #{frozenStatus,jdbcType=NVARCHAR}, #{frozenTime,jdbcType=TIMESTAMP}, #{unfrozenTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastModifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.liy.generator.entity.QuartzTaskInformations">
    insert into QUARTZ_TASK_INFORMATIONS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="taskNo != null">
        TASK_NO,
      </if>
      <if test="taskName != null">
        TASK_NAME,
      </if>
      <if test="className != null">
        CLASS_NAME,
      </if>
      <if test="executeParameter != null">
        EXECUTE_PARAMETER,
      </if>
      <if test="schedulerRule != null">
        SCHEDULER_RULE,
      </if>
      <if test="frozenStatus != null">
        FROZEN_STATUS,
      </if>
      <if test="frozenTime != null">
        FROZEN_TIME,
      </if>
      <if test="unfrozenTime != null">
        UNFROZEN_TIME,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="lastModifyTime != null">
        LAST_MODIFY_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="taskNo != null">
        #{taskNo,jdbcType=NVARCHAR},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=NVARCHAR},
      </if>
      <if test="className != null">
        #{className,jdbcType=NVARCHAR},
      </if>
      <if test="executeParameter != null">
        #{executeParameter,jdbcType=NVARCHAR},
      </if>
      <if test="schedulerRule != null">
        #{schedulerRule,jdbcType=NVARCHAR},
      </if>
      <if test="frozenStatus != null">
        #{frozenStatus,jdbcType=NVARCHAR},
      </if>
      <if test="frozenTime != null">
        #{frozenTime,jdbcType=TIMESTAMP},
      </if>
      <if test="unfrozenTime != null">
        #{unfrozenTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null">
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liy.generator.entity.QuartzTaskInformationsExample" resultType="java.lang.Long">
    select count(*) from QUARTZ_TASK_INFORMATIONS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update QUARTZ_TASK_INFORMATIONS
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.taskNo != null">
        TASK_NO = #{record.taskNo,jdbcType=NVARCHAR},
      </if>
      <if test="record.taskName != null">
        TASK_NAME = #{record.taskName,jdbcType=NVARCHAR},
      </if>
      <if test="record.className != null">
        CLASS_NAME = #{record.className,jdbcType=NVARCHAR},
      </if>
      <if test="record.executeParameter != null">
        EXECUTE_PARAMETER = #{record.executeParameter,jdbcType=NVARCHAR},
      </if>
      <if test="record.schedulerRule != null">
        SCHEDULER_RULE = #{record.schedulerRule,jdbcType=NVARCHAR},
      </if>
      <if test="record.frozenStatus != null">
        FROZEN_STATUS = #{record.frozenStatus,jdbcType=NVARCHAR},
      </if>
      <if test="record.frozenTime != null">
        FROZEN_TIME = #{record.frozenTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.unfrozenTime != null">
        UNFROZEN_TIME = #{record.unfrozenTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyTime != null">
        LAST_MODIFY_TIME = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update QUARTZ_TASK_INFORMATIONS
    set ID = #{record.id,jdbcType=BIGINT},
      TASK_NO = #{record.taskNo,jdbcType=NVARCHAR},
      TASK_NAME = #{record.taskName,jdbcType=NVARCHAR},
      CLASS_NAME = #{record.className,jdbcType=NVARCHAR},
      EXECUTE_PARAMETER = #{record.executeParameter,jdbcType=NVARCHAR},
      SCHEDULER_RULE = #{record.schedulerRule,jdbcType=NVARCHAR},
      FROZEN_STATUS = #{record.frozenStatus,jdbcType=NVARCHAR},
      FROZEN_TIME = #{record.frozenTime,jdbcType=TIMESTAMP},
      UNFROZEN_TIME = #{record.unfrozenTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      LAST_MODIFY_TIME = #{record.lastModifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liy.generator.entity.QuartzTaskInformations">
    update QUARTZ_TASK_INFORMATIONS
    <set>
      <if test="taskNo != null">
        TASK_NO = #{taskNo,jdbcType=NVARCHAR},
      </if>
      <if test="taskName != null">
        TASK_NAME = #{taskName,jdbcType=NVARCHAR},
      </if>
      <if test="className != null">
        CLASS_NAME = #{className,jdbcType=NVARCHAR},
      </if>
      <if test="executeParameter != null">
        EXECUTE_PARAMETER = #{executeParameter,jdbcType=NVARCHAR},
      </if>
      <if test="schedulerRule != null">
        SCHEDULER_RULE = #{schedulerRule,jdbcType=NVARCHAR},
      </if>
      <if test="frozenStatus != null">
        FROZEN_STATUS = #{frozenStatus,jdbcType=NVARCHAR},
      </if>
      <if test="frozenTime != null">
        FROZEN_TIME = #{frozenTime,jdbcType=TIMESTAMP},
      </if>
      <if test="unfrozenTime != null">
        UNFROZEN_TIME = #{unfrozenTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null">
        LAST_MODIFY_TIME = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liy.generator.entity.QuartzTaskInformations">
    update QUARTZ_TASK_INFORMATIONS
    set TASK_NO = #{taskNo,jdbcType=NVARCHAR},
      TASK_NAME = #{taskName,jdbcType=NVARCHAR},
      CLASS_NAME = #{className,jdbcType=NVARCHAR},
      EXECUTE_PARAMETER = #{executeParameter,jdbcType=NVARCHAR},
      SCHEDULER_RULE = #{schedulerRule,jdbcType=NVARCHAR},
      FROZEN_STATUS = #{frozenStatus,jdbcType=NVARCHAR},
      FROZEN_TIME = #{frozenTime,jdbcType=TIMESTAMP},
      UNFROZEN_TIME = #{unfrozenTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      LAST_MODIFY_TIME = #{lastModifyTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>