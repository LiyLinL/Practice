<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liy.generator.mapper.QuartzTaskErrorsMapper">
  <resultMap id="BaseResultMap" type="com.liy.generator.entity.QuartzTaskErrors">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="TASK_EXECUTE_RECORDID" jdbcType="NVARCHAR" property="taskExecuteRecordid" />
    <result column="ERROR_KEY" jdbcType="NVARCHAR" property="errorKey" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="LAST_MODIFY_TIME" jdbcType="TIMESTAMP" property="lastModifyTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.liy.generator.entity.QuartzTaskErrors">
    <result column="ERROR_VALUE" jdbcType="CLOB" property="errorValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, TASK_EXECUTE_RECORDID, ERROR_KEY, CREATE_TIME, LAST_MODIFY_TIME
  </sql>
  <sql id="Blob_Column_List">
    ERROR_VALUE
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.liy.generator.entity.QuartzTaskErrorsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from QUARTZ_TASK_ERRORS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.liy.generator.entity.QuartzTaskErrorsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from QUARTZ_TASK_ERRORS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from QUARTZ_TASK_ERRORS
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from QUARTZ_TASK_ERRORS
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.liy.generator.entity.QuartzTaskErrorsExample">
    delete from QUARTZ_TASK_ERRORS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liy.generator.entity.QuartzTaskErrors">
    insert into QUARTZ_TASK_ERRORS (ID, TASK_EXECUTE_RECORDID, ERROR_KEY, 
      CREATE_TIME, LAST_MODIFY_TIME, ERROR_VALUE
      )
    values (#{id,jdbcType=BIGINT}, #{taskExecuteRecordid,jdbcType=NVARCHAR}, #{errorKey,jdbcType=NVARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastModifyTime,jdbcType=TIMESTAMP}, #{errorValue,jdbcType=CLOB}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.liy.generator.entity.QuartzTaskErrors">
    insert into QUARTZ_TASK_ERRORS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="taskExecuteRecordid != null">
        TASK_EXECUTE_RECORDID,
      </if>
      <if test="errorKey != null">
        ERROR_KEY,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="lastModifyTime != null">
        LAST_MODIFY_TIME,
      </if>
      <if test="errorValue != null">
        ERROR_VALUE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="taskExecuteRecordid != null">
        #{taskExecuteRecordid,jdbcType=NVARCHAR},
      </if>
      <if test="errorKey != null">
        #{errorKey,jdbcType=NVARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null">
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="errorValue != null">
        #{errorValue,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liy.generator.entity.QuartzTaskErrorsExample" resultType="java.lang.Long">
    select count(*) from QUARTZ_TASK_ERRORS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update QUARTZ_TASK_ERRORS
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.taskExecuteRecordid != null">
        TASK_EXECUTE_RECORDID = #{record.taskExecuteRecordid,jdbcType=NVARCHAR},
      </if>
      <if test="record.errorKey != null">
        ERROR_KEY = #{record.errorKey,jdbcType=NVARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyTime != null">
        LAST_MODIFY_TIME = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.errorValue != null">
        ERROR_VALUE = #{record.errorValue,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update QUARTZ_TASK_ERRORS
    set ID = #{record.id,jdbcType=BIGINT},
      TASK_EXECUTE_RECORDID = #{record.taskExecuteRecordid,jdbcType=NVARCHAR},
      ERROR_KEY = #{record.errorKey,jdbcType=NVARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      LAST_MODIFY_TIME = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      ERROR_VALUE = #{record.errorValue,jdbcType=CLOB}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update QUARTZ_TASK_ERRORS
    set ID = #{record.id,jdbcType=BIGINT},
      TASK_EXECUTE_RECORDID = #{record.taskExecuteRecordid,jdbcType=NVARCHAR},
      ERROR_KEY = #{record.errorKey,jdbcType=NVARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      LAST_MODIFY_TIME = #{record.lastModifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liy.generator.entity.QuartzTaskErrors">
    update QUARTZ_TASK_ERRORS
    <set>
      <if test="taskExecuteRecordid != null">
        TASK_EXECUTE_RECORDID = #{taskExecuteRecordid,jdbcType=NVARCHAR},
      </if>
      <if test="errorKey != null">
        ERROR_KEY = #{errorKey,jdbcType=NVARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null">
        LAST_MODIFY_TIME = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="errorValue != null">
        ERROR_VALUE = #{errorValue,jdbcType=CLOB},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.liy.generator.entity.QuartzTaskErrors">
    update QUARTZ_TASK_ERRORS
    set TASK_EXECUTE_RECORDID = #{taskExecuteRecordid,jdbcType=NVARCHAR},
      ERROR_KEY = #{errorKey,jdbcType=NVARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      LAST_MODIFY_TIME = #{lastModifyTime,jdbcType=TIMESTAMP},
      ERROR_VALUE = #{errorValue,jdbcType=CLOB}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liy.generator.entity.QuartzTaskErrors">
    update QUARTZ_TASK_ERRORS
    set TASK_EXECUTE_RECORDID = #{taskExecuteRecordid,jdbcType=NVARCHAR},
      ERROR_KEY = #{errorKey,jdbcType=NVARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      LAST_MODIFY_TIME = #{lastModifyTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>